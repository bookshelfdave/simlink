on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset
jobs:
  build-rust:
    name: Build Linux binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: cargo test --verbose
      - name: Build
        run: cargo build --release --verbose
      - name: Copy bin
        run: mkdir ./simlink-linux-amd64 && cp ./target/release/simlink ./simlink-linux-amd64/simlink
      - name: Compress
        run: tar cvzf simlink-linux-amd64.tgz ./simlink-linux-amd64 
      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: simlink-linux-build-${{ github.ref }}
          path: simlink-linux-amd64.tgz
  build-darwin:
    name: Build MacOS binary
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: cargo test --verbose
      - name: Build
        run: cargo build --release --verbose
      - name: Copy bin
        run: mkdir ./simlink-darwin-amd64 && cp ./target/release/simlink ./simlink-darwin-amd64/simlink
      - name: Compress
        run: tar cvzf simlink-linux-darwin.tgz ./simlink-darwin-amd64 
      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: simlink-darwin-build-${{ github.ref }}
          path: simlink-darwin-amd64.tgz
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [build-rust, build-darwin]
    steps:
      - name: Download build artifact for Linux
        uses: actions/download-artifact@v1
        with:
          name: simlink-linux-build-${{ github.ref }}
      - name: Download build artifact for Darwin
        uses: actions/download-artifact@v1
        with:
          name: simlink-darwin-build-${{ github.ref }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./simlink-linux-amd64.tgz
          asset_name: simlink-linux-amd64.gz
          asset_content_type: application/tgz
      - name: Upload Darwin
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./simlink-darwin-amd64.tgz
          asset_name: simlink-darwin-amd64.gz
          asset_content_type: application/tgz
